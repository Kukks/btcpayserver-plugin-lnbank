{
  "paths": {
    "/api/v1/lnbank/wallets": {
      "get": {
        "tags": [
          "LNbank"
        ],
        "summary": "Get wallets",
        "description": "View information about the available wallets",
        "operationId": "LNbankWallets_GetWallets",
        "responses": {
          "200": {
            "description": "List of wallets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankWalletDataList"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.user.canmodifyprofile"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "LNbank"
        ],
        "summary": "Create a new wallet",
        "description": "Create a new wallet",
        "operationId": "LNbankWallets_CreateWallet",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LNbankEditWalletRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Information about the new wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankWalletData"
                }
              }
            }
          },
          "400": {
            "description": "A list of errors that occurred when creating the wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to add new wallets"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.user.canmodifyprofile"
            ]
          }
        ]
      }
    },
    "/api/v1/lnbank/wallets/{walletId}": {
      "get": {
        "tags": [
          "LNbank"
        ],
        "summary": "Get wallet",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "View information about the specified wallet",
        "operationId": "LNbankWallets_GetWallet",
        "responses": {
          "200": {
            "description": "Specified wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankWalletData"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to view the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.canviewwallet"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "LNbank"
        ],
        "summary": "Update wallet",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update the specified wallet",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LNbankEditWalletRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "operationId": "LNbankWallets_UpdateWallet",
        "responses": {
          "200": {
            "description": "Updated specified wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankWalletData"
                }
              }
            }
          },
          "400": {
            "description": "A list of errors that occurred when updating the wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to update the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.canmanagewallet"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "LNbank"
        ],
        "summary": "Remove wallet",
        "description": "Removes the specified wallet.",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet to remove",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wallet has been removed"
          },
          "400": {
            "description": "A list of errors that occurred when removing the wallet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to remove the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.canmanagewallet"
            ]
          }
        ]
      }
    },
    "/api/v1/lnbank/wallets/{walletId}/receive": {
      "post": {
        "tags": [
          "LNbank"
        ],
        "summary": "Receive to wallet",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The receiving wallet",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Create an invoice for the specified wallet",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LNbankReceiveRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "operationId": "LNbankWallets_Receive",
        "responses": {
          "200": {
            "description": "Invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankTransactionData"
                }
              }
            }
          },
          "400": {
            "description": "A list of errors that occurred when creating the invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to create an invoice for the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.cancreateinvoices"
            ]
          }
        ]
      }
    },
    "/api/v1/lnbank/wallets/{walletId}/send": {
      "post": {
        "tags": [
          "LNbank"
        ],
        "summary": "Send from wallet",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The sending wallet",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Pay destination (Payment Request, LNURL or Lightning Address) from the specified wallet",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LNbankSendRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "operationId": "LNbankWallets_Send",
        "responses": {
          "200": {
            "description": "Payment settled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankTransactionData"
                }
              }
            }
          },
          "201": {
            "description": "Payment sent, but in progress",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankTransactionData"
                }
              }
            }
          },
          "400": {
            "description": "A list of errors that occurred when paying the destination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to send money from the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.cansendmoney"
            ]
          }
        ]
      }
    },
    "/api/v1/lnbank/wallets/{walletId}/transactions": {
      "get": {
        "tags": [
          "LNbank"
        ],
        "summary": "Get transactions",
        "description": "View information about the wallet transactions",
        "operationId": "LNbankTransactions_GetTransactions",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankTransactionDataList"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to view the specified wallet"
          },
          "404": {
            "description": "The key is not found for this wallet or transaction"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.canviewwallet"
            ]
          }
        ]
      }
    },
    "/api/v1/lnbank/wallets/{walletId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "LNbank"
        ],
        "summary": "Get transaction",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "The transaction to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "View information about the specified transaction",
        "operationId": "LNbankTransactions_GetTransaction",
        "responses": {
          "200": {
            "description": "Specified transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LNbankTransactionData"
                }
              }
            }
          },
          "403": {
            "description": "If you are authenticated but forbidden to view the specified wallet or transaction"
          },
          "404": {
            "description": "The key is not found for this wallet or transaction"
          }
        },
        "security": [
          {
            "API_Key": [
              "btcpay.plugin.lnbank.canviewwallet"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LNbankEditWalletRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet"
          }
        }
      },
      "LNbankReceiveRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the transaction",
            "nullable": true
          },
          "attachDescription": {
            "type": "boolean",
            "description": "Whether or not the description should be attached to the Lightning invoice",
            "nullable": true,
            "default": false
          },
          "amount": {
            "type": "string",
            "description": "Amount wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          },
          "privateRouteHints": {
            "type": "boolean",
            "nullable": true,
            "description": "True if the invoice should include private route hints. If null, it falls back to the wallet's default."
          },
          "expiry": {
            "description": "Expiration time in minutes",
            "allOf": [ {"$ref": "#/components/schemas/TimeSpanMinutes"}]
          }
        }
      },
      "LNbankSendRequest": {
        "type": "object",
        "properties": {
          "destination": {
            "type": "string",
            "description": "The destination of the transaction: Payment Request, LNURL or Lightning Address"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The internal description of the transaction"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "The LNURL comment if the destination is a LNURL"
          },
          "explicitAmount": {
            "type": "string",
            "nullable": true,
            "description": "If the invoice amount is unspecified, explicit amount is required. Value wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          }
        }
      },
      "LNbankWalletDataList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LNbankWalletData"
        }
      },
      "LNbankWalletData": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "The name of the wallet"
          },
          "createdAt": {
            "description": "The creation time of the wallet",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnixTimestamp"
              }
            ]
          },
          "balance": {
            "type": "string",
            "description": "Amount wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          },
          "accessKey": {
            "type": "string",
            "description": "The access key for the wallet"
          },
          "lnurlPayBech32": {
            "type": "string",
            "description": "Bech32 representation of LNURL for pay requests",
            "example": "lnurl1dp68gup69uhnzv3h9cczuvpwxyarzdp3xsez7ctsdyhhvvf0d3hxyctwdvhkcmn4wfkz7v3kxccr2dekxyknsctyxgkngveexyknsv33vykngvr9v5unjv3evfnrwde0wpshj5c6cpv"
          },
          "lnurlPayUri": {
            "type": "string",
            "description": "URI representation of LNURL for pay requests",
            "example": "lnurlp://example.com/api/v1/lnbank/lnurl/26605761-8ad2-4391-821a-40ee9929bf77/pay"
          }
        }
      },
      "LNbankTransactionDataList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LNbankTransactionData"
        }
      },
      "LNbankTransactionData": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the transaction",
            "nullable": false
          },
          "walletId": {
            "type": "string",
            "description": "The id of the wallet",
            "nullable": false
          },
          "invoiceId": {
            "type": "string",
            "description": "The id of the associated Lightning invoice",
            "nullable": true
          },
          "withdrawConfigId": {
            "type": "string",
            "description": "The id of the withdraw configuration used for this transaction",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction"
          },
          "status": {
            "type": "string",
            "description": "The status of the transaction"
          },
          "paymentRequest": {
            "type": "string",
            "description": "The payment request of the transaction"
          },
          "paymentHash": {
            "type": "string",
            "description": "The payment hash of the transaction"
          },
          "preimage": {
            "type": "string",
            "description": "The preimage of the transaction",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "description": "Amount wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          },
          "amountSettled": {
            "type": "string",
            "description": "Settled amount wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          },
          "routingFee": {
            "type": "string",
            "description": "Routing fee wrapped in a string, represented in a millistatoshi string. (1000 millisatoshi = 1 satoshi)"
          },
          "createdAt": {
            "description": "The creation time of the transaction",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnixTimestamp"
              }
            ]
          },
          "expiresAt": {
            "description": "The expiration time of the transaction",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnixTimestamp"
              }
            ]
          },
          "paidAt": {
            "description": "The payment time of the transaction",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnixTimestamp"
              }
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "LNbank"
    }
  ]
}
